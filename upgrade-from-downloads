#!/usr/bin/env bash

set -u

summary="$(mktemp)"
download_dir="${HOME}/Downloads"
install_dir="${HOME}/software"
binary_dir="${HOME}/.local/bin"
completion_dir="$HOME/.config/fish/completions"

extract_version() {
    echo "${1}" | awk "{ print \$${2:-0}}"
}

log() {
    tool="${1}"
    version="${2}"
    field="${3:-0}"

    version="$(extract_version "${version}" "${field}")"

    echo -e "${tool}\t${version}"
}

logsummary() {
    tool="${1}"
    version="${2}"
    field="${3:-0}"

    version="$(extract_version "${version}" "${field}")"

    log "${tool}" "${version}"
    echo -e "${tool}\t${version}" >> "${summary}"
}

echo -e "# # # # # #\n\n# # # # # # op"
log op "$(op --version)" 1
if stat -t "${download_dir}"/op_linux_amd64_v*.zip >/dev/null 2>&1; then
    # As per https://developer.1password.com/docs/cli/get-started/#install
        unzip -d "${binary_dir}" "${download_dir}"/op_linux_amd64_v*.zip op \
    &&  rm "${download_dir}"/op_linux_amd64_v*.zip \
    &&  sudo chgrp onepassword-cli "${binary_dir}"/op \
    &&  sudo chown root "${binary_dir}"/op \
    &&  sudo chmod g+s "${binary_dir}"/op \
    &&  op completion fish > "${completion_dir}/op.fish" \
    &&  logsummary op "$(op --version)" 1
else
    echo "No upgrade"
fi

echo -e "# # # # # #\n\n# # # # # # espanso"
log espanso "$(espanso --version)" 2
if [ -e "${download_dir}"/Espanso-X11.AppImage ]; then
        mv "${download_dir}"/Espanso-X11.AppImage "${install_dir}"/ \
    &&  chmod +x "${install_dir}"/Espanso-X11.AppImage \
    &&  ln -sf "$(realpath "${install_dir}"/Espanso-X11.AppImage)" "${binary_dir}"/espanso \
    &&  logsummary espanso "$(espanso --version)" 2
else
    echo "No upgrade"
fi

if which dpkg > /dev/null 2>&1; then
    echo -e "# # # # # #\n\n# # # # # # Debian Packages"
    shopt -s nullglob
    for d in "${download_dir}"/*.deb; do
        package="$(dpkg --info "${d}" | grep Package | awk '{ print $2 }')"
        new_version="$(dpkg --info "${d}" | grep Version | awk '{ print $2 }')"
        old_version="$(apt show "${package}" 2> /dev/null | grep Version | awk '{ print $2 }')"
        log "${package}" "${old_version}"
        sudo dpkg -i "${d}" \
            && rm "${d}" \
            && logsummary "${package}" "${new_version}"
    done
    shopt -u nullglob
fi

if which pacman > /dev/null 2>&1; then
    echo -e "# # # # # #\n\n# # # # # # Arch Packages"
    shopt -s nullglob
    # TODO: prior version?
    # TODO: pass all archives to a single call of pacman?
    for d in "${download_dir}"/*.pkg.tar.xz; do
            sudo pacman -U "${d}" \
        &&  rm "${d}"
        # TODO: new version?
    done
    shopt -u nullglob
fi

echo -e "# # # # # #\n\n# # # # # # Summary"
if [ $(wc -l < "${summary}") -gt 0 ]; then
    cat "${summary}"
else
    echo "No upgrades"
fi
